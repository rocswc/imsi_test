<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.dao.BoardDAO">
		
	<!-- 게시판 목록 -->
	<select id="boardList" resultType="com.java.vo.BoardVO">
		SELECT	b.*,
			    (SELECT COUNT(*) FROM board_like bl WHERE bl.board_id = b.board_id) AS like_count,
			    (SELECT COUNT(*) FROM reply r WHERE r.board_id = b.board_id) AS reply_count
		FROM	board b
		ORDER BY board_date DESC
	</select>
	
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="com.java.vo.BoardVO">
		<selectKey keyProperty="board_id" resultType="int" order="BEFORE">
		      SELECT board_seq.NEXTVAL FROM dual
		</selectKey>	
	
		INSERT INTO board(board_id, human_id, board_title, board_content, board_date
			<if test="board_fname != null">
				, board_fname, board_fsize, board_realfname
			</if>
		)
		VALUES(#{board_id}, #{human_id, jdbcType=VARCHAR}, #{board_title, jdbcType=VARCHAR}, #{board_content, jdbcType=VARCHAR}, sysdate
			<if test="board_fname != null">
				, #{board_fname}, #{board_fsize}, #{board_realfname}
			</if>
		)
	</insert>
	
	
	<!-- 좋아요 default -->
	<insert id="insertLike" parameterType="com.java.vo.BoardVO">
		INSERT INTO board_like(like_id, human_id, board_id, like_count)
		VALUES(board_like_seq.NEXTVAL, #{human_id, jdbcType=VARCHAR}, #{board_id, jdbcType=INTEGER}, #{like_count})
	</insert>
	
	
	<!-- 게시글 불러오기 -->
	<select id="getBoard" parameterType="int" resultType="com.java.vo.BoardVO">
		SELECT 
		    	b.board_id,
		    	b.board_title,
		    	b.board_content,
		    	b.board_date,
		    	b.human_id,
		    	b.board_fname,
		    	b.board_realfname,
		    	(SELECT COUNT(liker_id) FROM board_like bl WHERE bl.board_id = b.board_id) AS like_count
		FROM	board b
		WHERE	board_id = #{board_id} 
	</select>
	
	
	<!-- 좋아요 개수 -->
	<select id="countLike" parameterType="int" resultType="int">
		SELECT COUNT(liker_id) FROM board_like
		WHERE board_id = #{board_id}
	</select>
	
	
	<!-- board 테이블 좋아요 수 -->
	<update id="updateBoardLikeCount" parameterType="map">
	    UPDATE board
	    SET like_count = #{like_count}
	    WHERE board_id = #{board_id}
	</update>
	
	
	<!-- 좋아요 수 증가 -->
	<insert id="addLike" parameterType="map">
	    INSERT INTO board_like (like_id, board_id, like_count, liker_id)
	    VALUES (board_like_seq.NEXTVAL, #{board_id}, 0, #{liker_id})
	</insert>
	
	<!-- 좋아요 유저 여부확인 -->
	<select id="isLikedByUser" parameterType="map" resultType="int">
   		SELECT	COUNT(*) FROM board_like
    	WHERE	board_id = #{board_id}
      	AND		liker_id = #{liker_id}
	</select>
	
	
	<!-- 좋아요 수 감소 -->
	<delete id="unLike" parameterType="map">
		DELETE FROM	board_like
		WHERE		board_id = #{board_id} AND liker_id = #{liker_id}
	</delete>
	
	
	<!-- 게시글 수정 -->
	<update id="modifyBoard" parameterType="com.java.vo.BoardVO">
		UPDATE	board
		SET		board_content = #{board_content}
		WHERE	board_id = #{board_id}
	</update>
	
	<!-- 게시글 삭제(+ 댓글, 좋아요 DB 삭제) -->
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM board WHERE board_id = #{board_id}
	</delete>
	
	<delete id="deleteReplyDB" parameterType="int">
		DELETE FROM reply WHERE board_id = #{board_id}
	</delete>
	
	<delete id="deleteLikeDB" parameterType="int">
		DELETE FROM board_like WHERE board_id = #{board_id}
	</delete>

</mapper>